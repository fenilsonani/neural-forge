repos:
  # Code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=100]
        files: ^(src/|tests/).*\.py$

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]
        files: ^(src/|tests/).*\.py$

  # Linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=100, --extend-ignore=E203,W503]
        files: ^(src/|tests/).*\.py$
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        files: ^src/.*\.py$
        args: [--strict, --ignore-missing-imports]
        additional_dependencies:
          - types-setuptools

  # Security scanning with bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        files: ^src/.*\.py$

  # General pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File formatting
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        exclude: \.md$
      - id: mixed-line-ending
        args: [--fix=lf]
      
      # Python-specific
      - id: check-ast
        files: \.py$
      - id: check-builtin-literals
        files: \.py$
      - id: check-docstring-first
        files: \.py$
      - id: debug-statements
        files: \.py$
      - id: name-tests-test
        files: ^tests/.*\.py$
        args: [--pytest-test-first]
      
      # General file checks
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: check-yaml
        exclude: \.github/workflows/.*\.yml$  # GitHub Actions use some non-standard YAML
      - id: check-json
        exclude: \.vscode/.*\.json$
      
      # Large file prevention
      - id: check-added-large-files
        args: [--maxkb=1000]  # 1MB limit
      
      # Prevent commits to main
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]

  # YAML formatting and linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yml]
        exclude: \.github/workflows/.*\.yml$

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [--config=.markdownlint.yml]
        files: \.md$
        exclude: ^(CHANGELOG\.md|.*generated.*\.md)$

  # Dockerfile linting (if we add Docker support)
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: Dockerfile.*

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        files: \.sh$

  # Python security scanning with safety
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        args: [--short-report]

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: \.ipynb$

  # Python upgrade syntax (optional - helps modernize code)
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: [--py38-plus]
        files: ^(src/|tests/).*\.py$

  # Remove unused imports
  - repo: https://github.com/pycqa/autoflake
    rev: v2.2.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --expand-star-imports
        files: ^(src/|tests/).*\.py$

# Configuration for specific tools
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false